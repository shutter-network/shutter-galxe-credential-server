name: shutter-galxe_server
services:
  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - ./db-data:/var/lib/postgresql/data

  setup-postgres:
    image: postgres:14-alpine
    restart: always
    entrypoint: ["psql", "-f", "/migration.sql"]
    environment:
      PGHOST: "postgres"
      PGDATABASE: "postgres"
      PGUSER: "postgres"
      PGPASSWORD: "postgres"
    volumes:
      - ./migration.sql:/migration.sql:ro
    depends_on:
      postgres:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: always
    environment:
      WEB3_PROVIDER_URI:
      SEQUENCER_ADDRESS:
    volumes:
      - ${DATA_DIR:-.}/data/app:/data
    depends_on:
      setup-postgres:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    labels:
      caddy: "${APP_DOMAIN}"
      caddy.reverse_proxy: "{{upstreams 5000}}"

  caddy:
    image: lucaslorentz/caddy-docker-proxy:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ${DATA_DIR:-.}/data/caddy:/data
    labels:
      caddy.email: "devops@brainbot.com"
